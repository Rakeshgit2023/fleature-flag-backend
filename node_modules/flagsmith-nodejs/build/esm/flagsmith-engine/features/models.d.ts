export declare class FeatureModel {
    id: number;
    name: string;
    type: string;
    constructor(id: number, name: string, type: string);
    eq(other: FeatureModel): boolean;
}
export declare class MultivariateFeatureOptionModel {
    value: any;
    id: number | undefined;
    constructor(value: any, id?: number);
}
export declare class MultivariateFeatureStateValueModel {
    multivariateFeatureOption: MultivariateFeatureOptionModel;
    percentageAllocation: number;
    id: number;
    mvFsValueUuid: string;
    constructor(multivariate_feature_option: MultivariateFeatureOptionModel, percentage_allocation: number, id: number, mvFsValueUuid?: string);
}
export declare class FeatureStateModel {
    feature: FeatureModel;
    enabled: boolean;
    djangoID: number;
    featurestateUUID: string;
    featureSegment?: FeatureSegment;
    private value;
    multivariateFeatureStateValues: MultivariateFeatureStateValueModel[];
    constructor(feature: FeatureModel, enabled: boolean, djangoID: number, value?: any, featurestateUuid?: string);
    setValue(value: any): void;
    getValue(identityId?: number | string): any;
    isHigherSegmentPriority(other: FeatureStateModel): boolean;
    getMultivariateValue(identityID: number | string): any;
}
export declare class FeatureSegment {
    priority: number;
    constructor(priority: number);
}
