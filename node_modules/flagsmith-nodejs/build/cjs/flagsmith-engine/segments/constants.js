"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CONDITION_OPERATORS = exports.IN = exports.MODULO = exports.IS_NOT_SET = exports.IS_SET = exports.PERCENTAGE_SPLIT = exports.REGEX = exports.NOT_EQUAL = exports.NOT_CONTAINS = exports.GREATER_THAN_INCLUSIVE = exports.CONTAINS = exports.LESS_THAN_INCLUSIVE = exports.LESS_THAN = exports.GREATER_THAN = exports.EQUAL = exports.RULE_TYPES = exports.NONE_RULE = exports.ANY_RULE = exports.ALL_RULE = void 0;
// Segment Rules
exports.ALL_RULE = 'ALL';
exports.ANY_RULE = 'ANY';
exports.NONE_RULE = 'NONE';
exports.RULE_TYPES = [exports.ALL_RULE, exports.ANY_RULE, exports.NONE_RULE];
// Segment Condition Operators
exports.EQUAL = 'EQUAL';
exports.GREATER_THAN = 'GREATER_THAN';
exports.LESS_THAN = 'LESS_THAN';
exports.LESS_THAN_INCLUSIVE = 'LESS_THAN_INCLUSIVE';
exports.CONTAINS = 'CONTAINS';
exports.GREATER_THAN_INCLUSIVE = 'GREATER_THAN_INCLUSIVE';
exports.NOT_CONTAINS = 'NOT_CONTAINS';
exports.NOT_EQUAL = 'NOT_EQUAL';
exports.REGEX = 'REGEX';
exports.PERCENTAGE_SPLIT = 'PERCENTAGE_SPLIT';
exports.IS_SET = 'IS_SET';
exports.IS_NOT_SET = 'IS_NOT_SET';
exports.MODULO = 'MODULO';
exports.IN = 'IN';
exports.CONDITION_OPERATORS = {
    EQUAL: exports.EQUAL,
    GREATER_THAN: exports.GREATER_THAN,
    LESS_THAN: exports.LESS_THAN,
    LESS_THAN_INCLUSIVE: exports.LESS_THAN_INCLUSIVE,
    CONTAINS: exports.CONTAINS,
    GREATER_THAN_INCLUSIVE: exports.GREATER_THAN_INCLUSIVE,
    NOT_CONTAINS: exports.NOT_CONTAINS,
    NOT_EQUAL: exports.NOT_EQUAL,
    REGEX: exports.REGEX,
    PERCENTAGE_SPLIT: exports.PERCENTAGE_SPLIT,
    IS_SET: exports.IS_SET,
    IS_NOT_SET: exports.IS_NOT_SET,
    MODULO: exports.MODULO,
    IN: exports.IN
};
