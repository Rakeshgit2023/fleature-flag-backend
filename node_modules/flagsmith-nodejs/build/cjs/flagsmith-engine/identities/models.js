"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityModel = void 0;
const collections_js_1 = require("../utils/collections.js");
const node_crypto_1 = require("node:crypto");
class IdentityModel {
    identifier;
    environmentApiKey;
    createdDate;
    identityFeatures;
    identityTraits;
    identityUuid;
    djangoID;
    constructor(created_date, identityTraits, identityFeatures, environmentApiKey, identifier, identityUuid, djangoID) {
        this.identityUuid = identityUuid || (0, node_crypto_1.randomUUID)();
        this.createdDate = Date.parse(created_date) || Date.now();
        this.identityTraits = identityTraits;
        this.identityFeatures = new collections_js_1.IdentityFeaturesList(...identityFeatures);
        this.environmentApiKey = environmentApiKey;
        this.identifier = identifier;
        this.djangoID = djangoID;
    }
    get compositeKey() {
        return IdentityModel.generateCompositeKey(this.environmentApiKey, this.identifier);
    }
    static generateCompositeKey(env_key, identifier) {
        return `${env_key}_${identifier}`;
    }
    updateTraits(traits) {
        const existingTraits = new Map();
        for (const trait of this.identityTraits) {
            existingTraits.set(trait.traitKey, trait);
        }
        for (const trait of traits) {
            if (!!trait.traitValue) {
                existingTraits.set(trait.traitKey, trait);
            }
            else {
                existingTraits.delete(trait.traitKey);
            }
        }
        this.identityTraits = [];
        for (const [k, v] of existingTraits.entries()) {
            this.identityTraits.push(v);
        }
    }
}
exports.IdentityModel = IdentityModel;
